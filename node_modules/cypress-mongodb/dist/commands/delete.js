"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteOne = deleteOne;
exports.deleteMany = deleteMany;
var validator_1 = require("../utils/validator");
var bson_1 = require("bson");
function deleteOne(filter, options) {
    var args = {
        uri: Cypress.env('mongodb').uri,
        database: (options === null || options === void 0 ? void 0 : options.database) || Cypress.env('mongodb').database,
        collection: (options === null || options === void 0 ? void 0 : options.collection) || Cypress.env('mongodb').collection,
        options: options,
        filter: filter,
    };
    (0, validator_1.validate)(args);
    if (!filter) {
        throw new Error('Filter must be specified');
    }
    else if (typeof filter !== 'object' || Array.isArray(filter)) {
        throw new Error('Filter must be an object');
    }
    args.filter = (0, bson_1.serialize)(args.filter);
    return cy.task('deleteOne', args).then(function (result) {
        return result;
    });
}
function deleteMany(filter, options) {
    var args = {
        uri: Cypress.env('mongodb').uri,
        database: (options === null || options === void 0 ? void 0 : options.database) || Cypress.env('mongodb').database,
        collection: (options === null || options === void 0 ? void 0 : options.collection) || Cypress.env('mongodb').collection,
        options: options,
        filter: filter,
    };
    (0, validator_1.validate)(args);
    if (!filter) {
        throw new Error('Filter must be specified');
    }
    else if (typeof filter !== 'object' || Array.isArray(filter)) {
        throw new Error('Filter must be an object');
    }
    args.filter = (0, bson_1.serialize)(args.filter);
    return cy.task('deleteMany', args).then(function (result) {
        return result;
    });
}
